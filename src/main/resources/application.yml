# Internal configuration
spring:
  application:
    name: @project.artifactId@
    version: @project.version@
    spec: @mangadex.spec@

  data:
    mongodb:
      host: ${kmdah.cache.mongodb.host}
      port: ${kmdah.cache.mongodb.port}
      authentication-database: ${kmdah.cache.mongodb.authentication-database}
      username: ${kmdah.cache.mongodb.username}
      password: ${kmdah.cache.mongodb.password}

  redis:
    # Jedis and Lettuce both (at the time of writing) evaluate redis configuration in the following order:
    # 1. attempt to use sentinel, unless unavailable
    # 2. attempt to use cluster, unless unavailable,
    # 3. attempt to use standalone, unless unavailable,
    # 4. fail
    host: ${KMDAH_GOSSIP_REDIS_HOST:localhost}
    port: ${KMDAH_GOSSIP_REDIS_PORT:6379}

  config:
    import: optional:file:${KMDAH_CONFIGURATION:config.yml}
  profiles:
    active:
      - cache-${kmdah.cache.backend}
      - tls-${kmdah.tls.backend}
  jackson:
    date-format: com.fasterxml.jackson.databind.util.StdDateFormat

server:
  port: ${kmdah.worker.port}
  shutdown: graceful
  forward-headers-strategy: native
  server-header: "kmdah ${spring.application.version} (${spring.application.spec}) - github.com/Tristan971/kmdah"
  jetty:
    connection-idle-timeout: 3s
    threads:
      idle-timeout: 5s
  error:
    whitelabel:
      enabled: false

logging:
  level:
    root: WARN
    moe.tristan.kmdah: INFO
    org.springframework:
      boot.web.embedded.jetty: INFO
      integration.leader: INFO
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(%X{ruid:-internal}){faint} %clr(%.32logger{0}){cyan} %clr(:){faint} %m%n%wEx"

management:
  endpoint.health.show-details: always
  endpoints:
    enabled-by-default: true
    web:
      base-path: /__mon
      exposure.include:
        - info
        - health
        - prometheus
  metrics:
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            percentiles: 0.5,0.75,0.9,0.95,0.99
      client:
        request:
          autotime:
            percentiles: 0.5,0.75,0.9,0.95,0.99

# User configuration
kmdah:

  cache:
    backend: ${KMDAH_CACHE_BACKEND}
    max-size-gb: ${KMDAH_CACHE_MAX_SIZE_GB:100}
    abort-lookup-threshold-millis: ${KMDAH_CACHE_ABORT_LOOKUP_THRESHOLD_MILLIS:500}

    filesystem:
      read-only: ${KMDAH_CACHE_FILESYSTEM_READ_ONLY:false}
      root-dir: ${KMDAH_CACHE_FILESYSTEM_ROOT_DIR:}

    mongodb:
      host: ${KMDAH_CACHE_MONGODB_HOST:localhost}
      port: ${KMDAH_CACHE_MONGODB_PORT:27017}
      authentication-database: ${KMDAH_CACHE_MONGODB_AUTHENTICATION_DATABASE:admin}
      username: ${KMDAH_CACHE_MONGODB_USERNAME:kmdah}
      password: ${KMDAH_CACHE_MONGODB_PASSWORD:kmdah}

  geoip:
    enabled: ${KMDAH_GEOIP_ENABLED:false}
    license-key: ${KMDAH_GEOIP_LICENSE_KEY:}

  gossip:
    id-generation-strategy: ${KMDAH_GOSSIP_ID_GENERATION_METHOD:random_uuid}
    redis:
      gossip-topic: ${KMDAH_GOSSIP_REDIS_TOPIC:kmdah}
      lock-registry-key: ${KMDAH_GOSSIP_REDIS_LOCK_REGISTRY_KEY:kmdah-leadership}

  tls:
    backend: ${KMDAH_TLS_BACKEND}
    file:
      certificate-output-file: ${KMDAH_TLS_FILE_CERTIFICATE_OUTPUT_FILE:tls.crt}
      private-key-output-file: ${KMDAH_TLS_FILE_PRIVATE_KEY_OUTPUT_FILE:tls.key}
    k8s:
      secret:
        auto-update: ${KMDAH_TLS_K8S_SECRET_AUTO_UPDATE:true}
        name: ${KMDAH_TLS_K8S_SECRET_NAME}
        namespace: ${KMDAH_TLS_K8S_SECRET_NAMESPACE}

  mangadex:
    client-secret: ${KMDAH_MANGADEX_CLIENT_SECRET}
    load-balancer-ip: ${KMDAH_MANGADEX_LOAD_BALANCER_IP}
    bandwidth-mbps: ${KMDAH_MANGADEX_BANDWIDTH_MBPS:1}
    enforce-tokens: ${KMDAH_MANGADEX_ENFORE_TOKENS:true}

  worker:
    port: ${KMDAH_WORKER_PORT:8080}

  experimental-features:
    jackson-blackbird-module: false
